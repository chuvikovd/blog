{"title":"React-Static using node.api.js with 3rd party plugins","description":"How to work with node.api.js file inside React-Static while using third party plugins that modify webpack loaders","slug":"react-static-node-api-with-plugins","html":"<p>Today I faced an issue, using <code>React-Static</code>. Issue is clearly described <a target=\"_blank\" rel=\"nofollow\" class=\"link\" href=\"https://github.com/react-static/react-static/issues/1328\">here</a>.</p>\n<blockquote>\n<p>TLDR: Images in production build have wrong paths and are not loaded</p>\n</blockquote>\n<p>In the issue, <a target=\"_blank\" rel=\"nofollow\" class=\"link\" href=\"https://github.com/martonkaufmann\">martnokaufmann</a> provided solution - modifying default <code>file-loader</code> inside <code>node.api.js</code>.</p>\n<p>For me this didn&#39;t worked, however. After some research I discovered that provided solution work only for <code>React-Static</code> without plugins, that modify <code>Webpack</code> loader configuration.</p>\n<h3 id=\"solution\">Solution</h3>\n<p>If you are using plugins that modify <code>Webpack</code> loader configuration, for example <a target=\"_blank\" rel=\"nofollow\" class=\"link\" href=\"https://www.npmjs.com/package/react-static-plugin-svg\">react-static-plugin-svg</a>, you must do some additional work inside <code>node.api.js</code>. This is required because plugins are loaded before loading <code>node.api.js</code>, so, there, we need to preserve plugin provided configuration also.</p>\n<p>For me the solution looks like this:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token parameter\">pluginOptions</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">webpack</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> defaultLoaders <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> svgLoader <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneOf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>rules <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        oneOf<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          svgLoader<span class=\"token punctuation\">,</span>\n          defaultLoaders<span class=\"token punctuation\">.</span>jsLoader<span class=\"token punctuation\">,</span>\n          defaultLoaders<span class=\"token punctuation\">.</span>jsLoaderExt<span class=\"token punctuation\">,</span>\n          defaultLoaders<span class=\"token punctuation\">.</span>cssLoader<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            loader<span class=\"token operator\">:</span> <span class=\"token string\">'url-loader'</span><span class=\"token punctuation\">,</span>\n            test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.(jpg|png)$/</span><span class=\"token punctuation\">,</span>\n            query<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              limit<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n              name<span class=\"token operator\">:</span> <span class=\"token string\">'static/[name].[hash:8].[ext]'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          state<span class=\"token punctuation\">.</span>defaultLoaders<span class=\"token punctuation\">.</span>fileLoader<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> config\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p>For you, the setup might be different. Main idea is that we need to save all plugin added rules (in my case <code>const svgLoader = config.module.rules[0].oneOf[0]</code>), before modifying <code>rules.oneOf</code> array and apply them there also.</p>\n","created":"2020-01-24T18:08:18.789Z","excerpt":"<p>Today I faced an issue, using <code>React-Static</code>. Issue is clearly described <a target=\"_blank\" rel=\"nofollow\" class=\"link\" href=\"https://github.com/react-static/react-static/issues/1328\">here</a>.</p>\n<blockquote>\n<p>TLDR: Images in production build have wrong paths and are not loaded</p>\n</blockquote>\n","categories":["React-Static"],"time":"1 min read"}